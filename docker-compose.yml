services:
  mysql-db:
    image: docker.io/bitnami/mysql:8.4
    container_name: mysql-db
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - MYSQL_DATABASE=db
      - MYSQL_ROOT_PASSWORD=password123
    ports:
      - "3306:3306"
    networks:
      - spring-net
    volumes:
      - mysql-data:/bitnami/mysql/data
      - ./mysql-init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 6

  discovery-server:
    build:
      context: ./DiscoveryServer
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - spring-net

  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/orderdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password123
    depends_on:
      mysql-db:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - spring-net

  payment-service:
    build:
      context: ./PaymentService
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/paymentdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password123
    depends_on:
      mysql-db:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - spring-net

  product-service:
    build:
      context: ./ProductsService
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/productdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password123
    depends_on:
      mysql-db:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - spring-net

  user-service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/userdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password123
    depends_on:
      mysql-db:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - spring-net

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - payment-service
      - order-service
      - product-service
      - user-service
    networks:
      - spring-net

networks:
  spring-net:
    driver: bridge

volumes:
  mysql-data:
    driver: local
